import 'package:flutter/material.dart';
import 'package:lineage3/widgets/stat_widget.dart';

class AttributesScreen extends StatelessWidget {
  final Map<String, int> userAttributes;
  final Map<String, int> userCharacteristics;
  final int availableAttributes;
  final Function(String) onAttributeUpdate;

  const AttributesScreen({
    super.key,
    required this.userAttributes,
    required this.userCharacteristics,
    required this.availableAttributes,
    required this.onAttributeUpdate,
  });

  // –ú–µ—Ç–æ–¥ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ Map
  int _getAttributeValue(Map<String, int> map, String key) {
    return map[key] ?? 0; // –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 0
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  String _formatPercentage(double value) {
    return '${value.toStringAsFixed(1)}%';
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –∞—Ç—Ä–∏–±—É—Ç–µ
  Widget _buildAttributeRow(
    String label,
    String description,
    int value,
    VoidCallback onIncrement,
  ) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        StatWidget(
          label: label,
          value: description,
          count: value,
          // –ï—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –æ—á–∫–∏, –∫–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, –∏–Ω–∞—á–µ –æ—Ç–∫–ª—é—á–µ–Ω–∞ (null)
          onIncrement: availableAttributes > 0 ? onIncrement : null,
        ),
        const SizedBox(height: 12),
      ],
    );
  }

  @override
  Widget build(BuildContext context) {
    final strength = _getAttributeValue(userAttributes, 'strength');
    final agility = _getAttributeValue(userAttributes, 'agility');
    final intelligence = _getAttributeValue(userAttributes, 'intelligence');
    final endurance = _getAttributeValue(userAttributes, 'endurance');
    final luck = _getAttributeValue(userAttributes, 'luck');

    final health = _getAttributeValue(userCharacteristics, 'health');
    final mana = _getAttributeValue(userCharacteristics, 'mana');

    return SingleChildScrollView(
      padding: const EdgeInsets.all(16),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–∞–Ω–µ–ª–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ—á–∫–æ–≤
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              const Text(
                '–ê—Ç—Ä–∏–±—É—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∞',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                ),
              ),
              Chip(
                backgroundColor: availableAttributes > 0 
                    ? Colors.blue[800]
                    : Colors.grey[800],
                label: Text(
                  '–û—á–∫–æ–≤: $availableAttributes',
                  style: const TextStyle(color: Colors.white),
                ),
              ),
            ],
          ),
          const SizedBox(height: 24),
          // –°–∏–ª–∞
          _buildAttributeRow(
            'üí™ –°–∏–ª–∞',
            '–§–∏–∑. —É—Ä–æ–Ω: $strength',
            strength,
            () => onAttributeUpdate('strength'),
          ),
          // –õ–æ–≤–∫–æ—Å—Ç—å
          _buildAttributeRow(
            'üéØ –õ–æ–≤–∫–æ—Å—Ç—å',
            '–£–∫–ª–æ–Ω–µ–Ω–∏–µ: ${_formatPercentage(agility * 0.5)}\n'
            '–ú–µ—Ç–∫–æ—Å—Ç—å: ${_formatPercentage(agility * 0.7)}',
            agility,
            () => onAttributeUpdate('agility'),
          ),
          // –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç
          _buildAttributeRow(
            'üß† –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç',
            '–ú–∞–≥. —É—Ä–æ–Ω: $intelligence\n'
            '–ú–∞–Ω–∞: $mana',
            intelligence,
            () => onAttributeUpdate('intelligence'),
          ),
          // –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å
          _buildAttributeRow(
            'üõ°Ô∏è –í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å',
            '–ó–¥–æ—Ä–æ–≤—å–µ: $health',
            endurance,
            () => onAttributeUpdate('endurance'),
          ),
          // –£–¥–∞—á–∞
          _buildAttributeRow(
            'üçÄ –£–¥–∞—á–∞',
            '–ö—Ä–∏—Ç: ${_formatPercentage(luck * 0.5)}\n'
            '–ú–Ω–æ–∂–∏—Ç–µ–ª—å: ${(1.5 + luck * 0.05).toStringAsFixed(2)}x',
            luck,
            () => onAttributeUpdate('luck'),
          ),
        ],
      ),
    );
  }
}
